-
  name: webapp webserver and database setup
  hosts: all
  vars:
    login_user: root
    login_password: password_1
    sql_bind_address: 0.0.0.0

  tasks:
    -
      name: install required common packages
      apt:
        name: python3-pip
        state: present
        install_recommends: yes
      become: true
      become_method: sudo

    -
      name: install mysql server
      apt: name = {{ item }} state=present install_recommends=yes
      with_items:
        - mysql-server
      when: "'db_servers' in group_names"
      become: true
      become_method: sudo

    -
      name: install PyMySQL using pip. Ansible mysql_db modules require this library
      pip:
        name: PyMySQL
      when: "'db_servers' in group_names"
      become: true
      become_method: sudo

    -
      name: bind mysql to remote address
      ini_file:
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        section: mysqld
        option: bind-address
        value: "{{ sql_bind_address }}"
      when: "'db_servers' in group_names"
      become: true
      become_method: sudo

    -
      name: start mysql service
      service:
        name: mysql
        state: restarted
        enabled: yes
      when: "'db_servers' in group_names"
      become: true
      become_method: sudo

    -
      name: Wait for port 3306 to become open on the host, don't start checking for 20 seconds
      wait_for:
        host: "{{ sql_bind_address }}"
        port: 3306
        delay: 20
      when: "'db_servers' in group_names"

    -
      name: create USERMANAGER database
      mysql_db:
        name: usermanager
        state: present
        login_user: "{{ login_user }}"
        login_password: "{{ login_password }}"
      when: "'db_servers' in group_names"

    -
      name: create database user with passwssword and all database privileges to the usermanager database
      mysql_user:
        name: usermanager_db_user
        password: password_1
        host: "%"
        priv: 'usermanager.*:ALL,GRANT'
        state: present
        login_user: "{{ login_user }}"
        login_password: "{{ login_password }}"
      when: "'db_servers' in group_names"
